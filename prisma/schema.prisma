// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id             String        @id @default(uuid())
  nombre         String
  email          String        @unique
  contrasena     String
  refreshTokens  RefreshToken?
  fecha_creacion DateTime      @default(now())
  Habit          Habit[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  usuarioId String   @unique
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model PasswordReset {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Habit {
  id              String           @id @default(uuid())
  name            String
  description     String
  frequency       Json
  userId          String
  usuario         Usuario          @relation(fields: [userId], references: [id], onDelete: Cascade)
  habitCheckmarks HabitCheckmark[]
  createdAt       DateTime         @default(now())
}

model HabitCheckmark {
  id        String   @id @default(uuid())
  habitId   String
  date      DateTime
  completed Boolean
  habit     Habit    @relation(fields: [habitId], references: [id])
}
